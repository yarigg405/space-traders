//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherLocalPosition;

    public static Entitas.IMatcher<GameEntity> LocalPosition {
        get {
            if (_matcherLocalPosition == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.LocalPosition);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherLocalPosition = matcher;
            }

            return _matcherLocalPosition;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Assets.Code.Gameplay.Common.LocalPosition localPosition { get { return (Assets.Code.Gameplay.Common.LocalPosition)GetComponent(GameComponentsLookup.LocalPosition); } }
    public UnityEngine.Vector3 LocalPosition { get { return localPosition.Value; } }
    public bool hasLocalPosition { get { return HasComponent(GameComponentsLookup.LocalPosition); } }

    public GameEntity AddLocalPosition(UnityEngine.Vector3 newValue) {
        var index = GameComponentsLookup.LocalPosition;
        var component = (Assets.Code.Gameplay.Common.LocalPosition)CreateComponent(index, typeof(Assets.Code.Gameplay.Common.LocalPosition));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceLocalPosition(UnityEngine.Vector3 newValue) {
        var index = GameComponentsLookup.LocalPosition;
        var component = (Assets.Code.Gameplay.Common.LocalPosition)CreateComponent(index, typeof(Assets.Code.Gameplay.Common.LocalPosition));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveLocalPosition() {
        RemoveComponent(GameComponentsLookup.LocalPosition);
        return this;
    }
}
