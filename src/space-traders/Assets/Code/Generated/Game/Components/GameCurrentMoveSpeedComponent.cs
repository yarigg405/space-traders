//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherCurrentMoveSpeed;

    public static Entitas.IMatcher<GameEntity> CurrentMoveSpeed {
        get {
            if (_matcherCurrentMoveSpeed == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.CurrentMoveSpeed);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherCurrentMoveSpeed = matcher;
            }

            return _matcherCurrentMoveSpeed;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Assets.Code.Gameplay.Features.Movement.CurrentMoveSpeed currentMoveSpeed { get { return (Assets.Code.Gameplay.Features.Movement.CurrentMoveSpeed)GetComponent(GameComponentsLookup.CurrentMoveSpeed); } }
    public float CurrentMoveSpeed { get { return currentMoveSpeed.Value; } }
    public bool hasCurrentMoveSpeed { get { return HasComponent(GameComponentsLookup.CurrentMoveSpeed); } }

    public GameEntity AddCurrentMoveSpeed(float newValue) {
        var index = GameComponentsLookup.CurrentMoveSpeed;
        var component = (Assets.Code.Gameplay.Features.Movement.CurrentMoveSpeed)CreateComponent(index, typeof(Assets.Code.Gameplay.Features.Movement.CurrentMoveSpeed));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceCurrentMoveSpeed(float newValue) {
        var index = GameComponentsLookup.CurrentMoveSpeed;
        var component = (Assets.Code.Gameplay.Features.Movement.CurrentMoveSpeed)CreateComponent(index, typeof(Assets.Code.Gameplay.Features.Movement.CurrentMoveSpeed));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveCurrentMoveSpeed() {
        RemoveComponent(GameComponentsLookup.CurrentMoveSpeed);
        return this;
    }
}
